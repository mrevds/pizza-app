volumes:
  postgres_volume:

services:
  pg:
    image: postgres:14-alpine3.19
    environment:
      - "POSTGRES_DB=${PG_DATABASE_NAME}"
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASSWORD=${PG_PASSWORD}"
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: migration.Dockerfile
    restart: on-failure
    environment:
      - "DB_HOST=pg"
      - "DB_PORT=5432"
      - "DB_NAME=${PG_DATABASE_NAME}"
      - "DB_USER=${PG_USER}"
      - "DB_PASSWORD=${PG_PASSWORD}"
    depends_on:
      pg:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT}:50051"
    environment:
      - "DB_HOST=pg"
      - "DB_PORT=5432"
      - "DB_NAME=${PG_DATABASE_NAME}"
      - "DB_USER=${PG_USER}"
      - "DB_PASSWORD=${PG_PASSWORD}"
    depends_on:
      - migrator

